{"version":3,"sources":["../../js/accordions.js"],"names":["$","Drupal","behaviors","weaver_accordions","accordionIconToggle","accordionItem","accordionIcon","querySelector","original","before","after","classList","contains","tween","KUTE","fromTo","path","duration","start","toggle","accordionToggle","accordion","action","collapse","checkAllOpen","accordionGroup","allOpen","querySelectorAll","forEach","toggleAccordionAllButton","allButton","closedText","dataset","openText","closest","textContent","attach","context","settings","weaver","once","each","accordionOpenAllButtons","document","openAllButton","addEventListener","accordions","e","code","target","keyCode","ctrlKey","on","parentElement","accordionParagraphs","accordionParagraph","nextSibling","parentNode","nextElementSibling","nextParagraph","add","jQuery"],"mappings":"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","sourcesContent":["(function ($, Drupal) {\n\n  'use strict';\n\n  Drupal.behaviors.weaver_accordions = {\n\n    accordionIconToggle: function(accordionItem) {\n      let accordionIcon = accordionItem.querySelector('.icon-morph-group');\n      let original, before, after;\n      original = accordionIcon.querySelector('.morph-original path');\n      before = accordionIcon.querySelector('.morph-beep path');\n      after = accordionIcon.querySelector('.morph-boop path');\n\n      if (original.classList.contains('lrb-morphed')) {\n          let tween = KUTE.fromTo(original, {path: after }, { path: before }, { duration: 200 }).start();\n      } else {\n          let tween = KUTE.fromTo(original, {path: before }, { path: after }, { duration: 200 }).start();\n      }\n      \n      original.classList.toggle('lrb-morphed');\n    },\n\n    accordionToggle: function(accordion, action) {\n      $(accordion).collapse(action);\n    },\n\n    checkAllOpen: function(accordionGroup) {\n      let allOpen = true;\n\n      // check status of each accordion\n      accordionGroup.querySelectorAll('.field--name-field-wv-accordion-group .collapse').forEach((accordionItem) => {\n        if (accordionItem.classList.contains('show') == false) {\n          allOpen = false;\n        }\n      });\n\n      return allOpen;\n    },\n\n    toggleAccordionAllButton: function(allButton) {\n      let closedText = allButton.dataset.closedText;\n      let openText = allButton.dataset.openText;\n      let accordionGroup = allButton.closest('.paragraph--type--wv-accordion');\n\n      let allOpen = this.checkAllOpen(accordionGroup);\n\n      // if all accordion items are open, change to CLOSE ALL\n      if (allOpen == true) {\n        allButton.textContent = closedText;\n      } else {\n        allButton.textContent = openText;\n      }\n    },\n\n    attach: function (context, settings) {\n\n      const weaver = Drupal.behaviors.weaver_accordions;\n\n      // ensures javascript runs only once per page load and not with every ajax call\n      $('body', context).once('weaver_accordions').each(function () { \n  \t\t\t\n        // Accordion Open All\n        const accordionOpenAllButtons = document.querySelectorAll('.accordion-toggle-all');\n        if (accordionOpenAllButtons) {\n\n          // add actions whenever ALL button clicked\n          accordionOpenAllButtons.forEach((openAllButton) => {\n            openAllButton.addEventListener('click', function() {\n\n              // toggle icon and open/close\n              let accordionGroup = openAllButton.closest('.paragraph--type--wv-accordion');\n              let accordions = accordionGroup.querySelectorAll('.collapse');\n              let allOpen = weaver.checkAllOpen(accordionGroup);\n\n              accordions.forEach((accordion) => {\n                if (allOpen == false) {\n                  weaver.accordionToggle(accordion, 'show');\n                } else {\n                  weaver.accordionToggle(accordion, 'hide');\n                }\n              });\n            });\n          });\n        }\n\n        const accordions = document.querySelectorAll('.paragraph--type--wv-accordion-item .collapse');\n        if (accordions) {\n\n          accordions.forEach((accordion) => {\n            // accordions respond to Enter and spacebar\n            document.addEventListener('keydown', (e) => {\n              if (e.code == 'Enter' && e.target.classList.contains('accordion-toggle')) {\n                $(accordion).collapse('toggle');\n              }\n              if (e.code == 'Escape' && e.target.classList.contains('accordion-toggle')) {\n                $(accordion).collapse('hide');\n              }\n\n              // open all accordions when CTRL + F used to search\n              if (e.keyCode == 70 && e.ctrlKey) {\n                $(accordion).collapse('show');\n              }\n\n            });\n\n            $(accordion).on('shown.bs.collapse hidden.bs.collapse', function() {\n              let accordionItem = accordion.parentElement;\n              weaver.accordionIconToggle(accordionItem);\n\n              //toggle all button\n              let allButton = accordionItem.closest('.paragraph--type--wv-accordion').querySelector('.accordion-toggle-all');\n              weaver.toggleAccordionAllButton(allButton);\n            });\n          });\n        }\n\n        const accordionParagraphs = document.querySelectorAll('.paragraph--type--wv-accordion');\n        if (accordionParagraphs) {\n          accordionParagraphs.forEach((accordionParagraph) => {\n            // check if next paragraph is also an accordion and remove margin-bottom from .field__item if so\n            let nextSibling = accordionParagraph.parentNode.nextElementSibling;\n            if (nextSibling != null && nextSibling.classList.contains('field__item')) {\n              let nextParagraph = nextSibling.querySelector('.paragraph');\n              if (nextParagraph != null && nextParagraph.classList.contains('paragraph--type--wv-accordion')) {\n                nextParagraph.classList.add('mt-0');\n                accordionParagraph.classList.add('mb-0');\n                accordionParagraph.parentNode.classList.add('mb-0');\n              }\n            }\n          });\n        }\n      });\n    }\n  };\n\n})(jQuery, Drupal);\n"],"file":"accordions.js"}